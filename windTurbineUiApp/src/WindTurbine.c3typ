/*
 * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.
 * This material, including without limitation any software, is the confidential trade secret and proprietary
 * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is
 * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.
 * This material may be covered by one or more patents or pending patent applications.
 */

entity type WindTurbine mixes MlSubject schema name 'WNDT' {

  id:           string  
   
   /**
   * The id of the wind turbine.
   */
  turbineId:    string

  /**
   * The country of the wind turbine.
   */
  country:      string

  /**
   * The city of the wind turbine.
   */
  city:         string

  /**
   * The latitude of the wind turbine.
   */
  latitude:     double

  /**
   * The longitude of the wind turbine.
   */
  longitude:    double

  /**
   * Nominal power of the wind turbine (e.g., 150 mega watts).
   */
  power:        int

  /**
   * The manufacturer of the wind turbine.
   */
  manufacturer: string

  /**
   * The {@link WindTurbineMeasurement} belonging to the wind turbine.
   */
  measurements: [WindTurbineMeasurement](turbineId)

  /**
   * The {@link WindTurbineEvent}s belonging to the wind turbine.
   */
  events:       [WindTurbineEvent](turbineId)

  

    /**
   * A method that provides events on a specific turbine.
   */
eventStats: function(turbineId: !string): FetchResult<WindTurbine> js-server


  /**
   * A method that provides statistics on a specific turbine.
   */
  gearOilTemperatureStats: function(turbineId: !string): DescriptiveStatisticsResult js-server
  
  /**
   * Returns the number of unplanned maintenance events for this wind turbine
   */
  unplannedMaintenanceEvents: int stored calc count(events.(event_code == "UNPLANNED_MAINTENANCE"))

  /**
  Returns the number of planned maintenance events for this wind turbine
  */
  plannedMaintenanceEvents: int stored calc count(events.(event_code == "PLANNED_MAINTENANCE"))

  /**
  Returns the number of forced shutdown / reboots for a wind turbine
  */
  rebootEvents: int stored calc count(events.(event_code == "SYSTEM_REBOOT"))

  /**
  Returns the latest event for this wind turbine
  */
  latestEvent: string calc latestValue(events.event_code) 

    
 countryStats: function(turbineId: !string): FetchResult<WindTurbine> js-server
  


}
